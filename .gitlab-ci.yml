stages:
  - build
  - test
  - deploy

variables:
  DOCKER_BACKEND_IMAGE: $CI_REGISTRY_IMAGE/go-api
  DOCKER_FRONTEND_IMAGE: $CI_REGISTRY_IMAGE/react-frontend
  DOCKER_TAG: $CI_COMMIT_SHORT_SHA

# Build Backend
build-backend:
  stage: build
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd backend
    - docker build -t $DOCKER_BACKEND_IMAGE:$DOCKER_TAG -t $DOCKER_BACKEND_IMAGE:latest .
    - docker push $DOCKER_BACKEND_IMAGE:$DOCKER_TAG
    - docker push $DOCKER_BACKEND_IMAGE:latest
  only:
    - main
    - master
    - develop

# Build Frontend
build-frontend:
  stage: build
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd frontend
    - docker build -t $DOCKER_FRONTEND_IMAGE:$DOCKER_TAG -t $DOCKER_FRONTEND_IMAGE:latest .
    - docker push $DOCKER_FRONTEND_IMAGE:$DOCKER_TAG
    - docker push $DOCKER_FRONTEND_IMAGE:latest
  only:
    - main
    - master
    - develop

# Test Backend
test-backend:
  stage: test
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $DOCKER_BACKEND_IMAGE:$DOCKER_TAG
    - docker run -d --name test-api -p 8080:8080 $DOCKER_BACKEND_IMAGE:$DOCKER_TAG
    - sleep 5
    - apk add --no-cache curl
    - curl -f http://localhost:8080/api/v1/health || exit 1
    - docker stop test-api
    - docker rm test-api
  dependencies:
    - build-backend
  only:
    - main
    - master
    - develop

# Test Frontend
test-frontend:
  stage: test
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $DOCKER_FRONTEND_IMAGE:$DOCKER_TAG
    - docker run -d --name test-frontend -p 80:80 $DOCKER_FRONTEND_IMAGE:$DOCKER_TAG
    - sleep 3
    - apk add --no-cache curl
    - curl -f http://localhost/ || exit 1
    - docker stop test-frontend
    - docker rm test-frontend
  dependencies:
    - build-frontend
  only:
    - main
    - master
    - develop

# Deploy to production
deploy:
  stage: deploy
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $DEPLOY_SERVER >> ~/.ssh/known_hosts
  script:
    - ssh $DEPLOY_USER@$DEPLOY_SERVER "cd /opt/app && docker compose pull && docker compose up -d"
  dependencies:
    - build-backend
    - build-frontend
  only:
    - main
    - master
  when: manual

