name: Build and Deploy

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

env:
  DOCKER_BACKEND_IMAGE: khoanguyen2610/backend
  DOCKER_FRONTEND_IMAGE: khoanguyen2610/frontend
  DOCKER_CONSUMER_IMAGE: khoanguyen2610/backend

jobs:
  build-and-push:
    name: Build and Push Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_BACKEND_IMAGE }}:latest
            ${{ env.DOCKER_BACKEND_IMAGE }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push consumer
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          target: consumer
          push: true
          tags: |
            ${{ env.DOCKER_CONSUMER_IMAGE }}:latest-consumer
            ${{ env.DOCKER_CONSUMER_IMAGE }}:${{ github.sha }}-consumer
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_FRONTEND_IMAGE }}:latest
            ${{ env.DOCKER_FRONTEND_IMAGE }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Deploy to Kubernetes
        run: |
          # Deploy backend
          kubectl apply -k k8s/backend/
          kubectl set image deployment/backend-api backend-api=${{ env.DOCKER_BACKEND_IMAGE }}:${{ github.sha }} -n backend
          kubectl set image deployment/email-processor-consumer consumer=${{ env.DOCKER_CONSUMER_IMAGE }}:${{ github.sha }}-consumer -n backend
          kubectl set image deployment/data-sync-consumer consumer=${{ env.DOCKER_CONSUMER_IMAGE }}:${{ github.sha }}-consumer -n backend
          kubectl set image deployment/report-generator-consumer consumer=${{ env.DOCKER_CONSUMER_IMAGE }}:${{ github.sha }}-consumer -n backend
          
          # Deploy frontend
          kubectl apply -k k8s/frontend/
          kubectl set image deployment/frontend-app frontend-app=${{ env.DOCKER_FRONTEND_IMAGE }}:${{ github.sha }} -n frontend

      - name: Wait for rollout
        run: |
          kubectl rollout status deployment/backend-api -n backend --timeout=300s
          kubectl rollout status deployment/frontend-app -n frontend --timeout=300s
          echo "âœ… Deployment complete!"

      - name: Show status
        run: |
          kubectl get pods -n backend
          kubectl get pods -n frontend
          kubectl get ingress -n frontend
