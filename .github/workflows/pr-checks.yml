name: PR Checks

on:
  pull_request:
    branches: [ main, master, develop ]

jobs:
  validate-pr:
    name: Validate PR
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          requireScope: false

      - name: Check for merge conflicts
        run: |
          git fetch origin ${{ github.base_ref }}
          if git merge-base --is-ancestor origin/${{ github.base_ref }} HEAD; then
            echo "✅ No merge conflicts detected"
          else
            echo "⚠️ Branch may have conflicts with base branch"
          fi

  check-files:
    name: Check File Changes
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v41

      - name: Check for sensitive files
        run: |
          SENSITIVE_FILES="credentials.md|.env|secrets|*.key|*.pem"
          if echo "${{ steps.changed-files.outputs.all_changed_files }}" | grep -E "$SENSITIVE_FILES"; then
            echo "⚠️ WARNING: Sensitive files detected in PR!"
            echo "Please ensure no secrets are committed."
            exit 1
          else
            echo "✅ No sensitive files detected"
          fi

      - name: Check YAML syntax
        if: contains(steps.changed-files.outputs.all_changed_files, '.yml') || contains(steps.changed-files.outputs.all_changed_files, '.yaml')
        run: |
          sudo apt-get update && sudo apt-get install -y yamllint
          echo "Checking YAML files..."
          find . -type f \( -name "*.yml" -o -name "*.yaml" \) ! -path "*/node_modules/*" -exec yamllint {} \; || true

  backend-checks:
    name: Backend PR Checks
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.changed_files, 'backend/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache-dependency-path: backend/go.mod

      - name: Go mod verify
        working-directory: ./backend
        run: go mod verify

      - name: Format check
        working-directory: ./backend
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "❌ Go files must be formatted with gofmt:"
            gofmt -l .
            exit 1
          fi

      - name: Vet
        working-directory: ./backend
        run: go vet ./...

  frontend-checks:
    name: Frontend PR Checks
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.changed_files, 'frontend/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Check package-lock.json
        working-directory: ./frontend
        run: |
          if [ -f "package-lock.json" ]; then
            echo "✅ package-lock.json exists"
          else
            echo "❌ package-lock.json is missing"
            exit 1
          fi

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Check for outdated dependencies
        working-directory: ./frontend
        run: npm outdated || true

  k8s-checks:
    name: Kubernetes Manifest Checks
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.changed_files, 'k8s/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install kubeval
        run: |
          wget https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
          tar xf kubeval-linux-amd64.tar.gz
          sudo mv kubeval /usr/local/bin

      - name: Validate Kubernetes manifests
        run: |
          find k8s -name "*.yaml" -o -name "*.yml" | while read manifest; do
            echo "Validating $manifest"
            kubeval "$manifest" || exit 1
          done

      - name: Check resource limits
        run: |
          echo "Checking for resource limits in deployments..."
          find k8s -name "*deployment*.yaml" | while read deployment; do
            if ! grep -q "limits:" "$deployment"; then
              echo "⚠️ WARNING: No resource limits found in $deployment"
            else
              echo "✅ Resource limits found in $deployment"
            fi
          done

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  pr-size-check:
    name: PR Size Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check PR size
        run: |
          BASE_SHA=${{ github.event.pull_request.base.sha }}
          HEAD_SHA=${{ github.event.pull_request.head.sha }}
          
          CHANGED_LINES=$(git diff --shortstat $BASE_SHA $HEAD_SHA | grep -oP '\d+(?= insertion)|\d+(?= deletion)' | awk '{s+=$1} END {print s}')
          
          if [ -z "$CHANGED_LINES" ]; then
            CHANGED_LINES=0
          fi
          
          echo "Total lines changed: $CHANGED_LINES"
          
          if [ $CHANGED_LINES -gt 1000 ]; then
            echo "⚠️ WARNING: This PR is very large (>1000 lines changed)."
            echo "Consider breaking it into smaller PRs for easier review."
          else
            echo "✅ PR size is reasonable"
          fi

  comment-summary:
    name: Post PR Summary
    runs-on: ubuntu-latest
    needs: [validate-pr, check-files, backend-checks, frontend-checks, k8s-checks, security-scan, pr-size-check]
    if: always()
    
    steps:
      - name: Create PR comment
        uses: actions/github-script@v7
        with:
          script: |
            const summary = `## 🔍 PR Checks Summary
            
            | Check | Status |
            |-------|--------|
            | Validate PR | ${{ needs.validate-pr.result == 'success' && '✅' || '❌' }} |
            | File Checks | ${{ needs.check-files.result == 'success' && '✅' || needs.check-files.result == 'skipped' && '⏭️' || '❌' }} |
            | Backend Checks | ${{ needs.backend-checks.result == 'success' && '✅' || needs.backend-checks.result == 'skipped' && '⏭️' || '❌' }} |
            | Frontend Checks | ${{ needs.frontend-checks.result == 'success' && '✅' || needs.frontend-checks.result == 'skipped' && '⏭️' || '❌' }} |
            | K8s Checks | ${{ needs.k8s-checks.result == 'success' && '✅' || needs.k8s-checks.result == 'skipped' && '⏭️' || '❌' }} |
            | Security Scan | ${{ needs.security-scan.result == 'success' && '✅' || '❌' }} |
            | PR Size Check | ${{ needs.pr-size-check.result == 'success' && '✅' || '❌' }} |
            
            **Overall Status**: ${{ needs.validate-pr.result == 'success' && needs.check-files.result == 'success' && needs.security-scan.result == 'success' && '✅ All checks passed!' || '❌ Some checks failed' }}
            
            ---
            _This summary was automatically generated by GitHub Actions._`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

